// ======================================================================
// COMPLETE DATABASE RESET AND RECREATION SCRIPT
// Lab 2: Advanced Cypher Foundations - Clean Slate Build
// Compatible with all Neo4j versions
// ======================================================================

// ======================================================================
// PHASE 1: COMPLETE DATABASE CLEANUP
// ======================================================================

// First, let's see what we're working with
MATCH (n) RETURN count(n) AS nodes_before_cleanup;

// Drop existing constraints manually (run these one by one if they exist)
DROP CONSTRAINT person_email_unique IF EXISTS;
DROP CONSTRAINT company_name_unique IF EXISTS;
DROP CONSTRAINT skill_name_unique IF EXISTS;
DROP CONSTRAINT project_id_unique IF EXISTS;
DROP CONSTRAINT department_name_unique IF EXISTS;

// Drop existing indexes manually (run these one by one if they exist)
DROP INDEX person_email_index IF EXISTS;
DROP INDEX company_name_index IF EXISTS;
DROP INDEX skill_name_index IF EXISTS;
DROP INDEX person_skills_index IF EXISTS;
DROP INDEX project_status_index IF EXISTS;
DROP INDEX person_department_index IF EXISTS;
DROP INDEX company_industry_index IF EXISTS;

// Delete all nodes and relationships
MATCH (n) DETACH DELETE n;

// Verify database is completely empty
MATCH (n) RETURN count(n) AS remaining_nodes;

// ======================================================================
// PHASE 2: SCHEMA CREATION (CONSTRAINTS AND INDEXES)
// ======================================================================

// Create uniqueness constraints (these automatically create optimized indexes)
CREATE CONSTRAINT person_email_unique FOR (p:Person) REQUIRE p.email IS UNIQUE;
CREATE CONSTRAINT company_name_unique FOR (c:Company) REQUIRE c.name IS UNIQUE;
CREATE CONSTRAINT skill_name_unique FOR (s:Skill) REQUIRE s.name IS UNIQUE;
CREATE CONSTRAINT project_id_unique FOR (p:Project) REQUIRE p.projectId IS UNIQUE;
CREATE CONSTRAINT department_name_unique FOR (d:Department) REQUIRE d.name IS UNIQUE;

// Create performance indexes for non-unique properties
CREATE INDEX person_skills_index FOR (p:Person) ON (p.skills);
CREATE INDEX project_status_index FOR (p:Project) ON (p.status);
CREATE INDEX person_department_index FOR (p:Person) ON (p.profession);
CREATE INDEX company_industry_index FOR (c:Company) ON (c.industry);

// ======================================================================
// PHASE 3: CORE DATA CREATION
// ======================================================================

// Create enhanced people with comprehensive profiles
CREATE (alice:Person:Employee:Manager {
  name: "Alice Johnson",
  email: "alice.johnson@techcorp.com", 
  age: 27,
  city: "San Francisco",
  profession: "Software Engineer",
  birthDate: date('1998-03-15'),
  joinedCompany: datetime('2020-09-01T09:00:00'),
  skills: ['Python', 'JavaScript', 'React', 'Node.js', 'GraphQL'],
  certifications: ['AWS Developer', 'React Certified'],
  performance_scores: [4.2, 4.5, 4.8, 4.3, 4.6],
  salary: 125000,
  location: point({latitude: 37.7749, longitude: -122.4194}),
  isRemote: false,
  created: datetime(),
  lastLogin: datetime()
});

CREATE (bob:Person:Employee {
  name: "Bob Smith",
  email: "bob.smith@techcorp.com",
  age: 32,
  city: "New York", 
  profession: "Data Scientist",
  birthDate: date('1991-07-22'),
  joinedCompany: datetime('2019-03-15T08:30:00'),
  skills: ['Python', 'R', 'SQL', 'Machine Learning', 'Statistics'],
  certifications: ['Google Cloud Professional', 'Tableau Desktop'],
  performance_scores: [4.0, 4.3, 4.1, 4.5, 4.2],
  salary: 135000,
  location: point({latitude: 40.7128, longitude: -74.0060}),
  isRemote: true,
  created: datetime(),
  lastLogin: datetime()
});

CREATE (carol:Person:Employee {
  name: "Carol Davis",
  email: "carol.davis@innovatech.com",
  age: 29,
  city: "Austin",
  profession: "UX Designer", 
  birthDate: date('1994-11-08'),
  joinedCompany: datetime('2021-06-01T09:15:00'),
  skills: ['Figma', 'Sketch', 'Adobe Creative Suite', 'User Research'],
  certifications: ['UX Design Certification', 'Accessibility Specialist'],
  performance_scores: [4.4, 4.6, 4.3, 4.7, 4.5],
  salary: 98000,
  location: point({latitude: 30.2672, longitude: -97.7431}),
  isRemote: false,
  created: datetime(),
  lastLogin: datetime()
});

CREATE (david:Person:Employee {
  name: "David Wilson",
  email: "david.wilson@techcorp.com",
  age: 35,
  city: "Seattle",
  profession: "DevOps Engineer",
  birthDate: date('1988-05-12'),
  joinedCompany: datetime('2018-01-20T10:00:00'),
  skills: ['Docker', 'Kubernetes', 'AWS', 'Terraform', 'Python'],
  certifications: ['AWS Solutions Architect', 'Kubernetes Administrator'],
  performance_scores: [4.1, 4.4, 4.2, 4.6, 4.3],
  salary: 140000,
  location: point({latitude: 47.6062, longitude: -122.3321}),
  isRemote: true,
  created: datetime(),
  lastLogin: datetime()
});

CREATE (eva:Person:Employee {
  name: "Eva Martinez",
  email: "eva.martinez@innovatech.com",
  age: 26,
  city: "San Francisco",
  profession: "Frontend Developer",
  birthDate: date('1997-09-03'),
  joinedCompany: datetime('2022-08-01T09:00:00'),
  skills: ['TypeScript', 'Vue.js', 'CSS', 'HTML', 'Jest'],
  certifications: ['Vue.js Certified', 'Frontend Masters'],
  performance_scores: [4.5, 4.2, 4.4, 4.1, 4.3],
  salary: 110000,
  location: point({latitude: 37.7749, longitude: -122.4194}),
  isRemote: false,
  created: datetime(),
  lastLogin: datetime()
});

// Additional developers for more realistic dataset
CREATE (frank:Person:Employee {
  name: "Frank Chen",
  email: "frank.chen@techcorp.com",
  age: 31,
  city: "San Francisco",
  profession: "Backend Developer",
  birthDate: date('1992-12-10'),
  joinedCompany: datetime('2020-02-15T09:00:00'),
  skills: ['Java', 'Spring Boot', 'PostgreSQL', 'Redis', 'Kafka'],
  certifications: ['Oracle Java Certified', 'Spring Professional'],
  performance_scores: [4.3, 4.1, 4.4, 4.2, 4.5],
  salary: 128000,
  location: point({latitude: 37.7749, longitude: -122.4194}),
  isRemote: false,
  created: datetime(),
  lastLogin: datetime()
});

// ======================================================================
// COMPANIES WITH RICH BUSINESS DATA
// ======================================================================

CREATE (techcorp:Company:TechCompany {
  name: "TechCorp",
  industry: "Technology",
  founded: 2010,
  employees: 1500,
  headquarters: "San Francisco",
  departments: ['Engineering', 'Product', 'Marketing', 'Sales', 'HR'],
  stock_price: 284.50,
  revenue_2023: 2400000000,
  revenue_2022: 2100000000,
  locations: ['San Francisco', 'New York', 'Austin', 'London'],
  technologies: ['Neo4j', 'Python', 'React', 'AWS', 'Kubernetes'],
  rating: 4.2,
  ceo: "Sarah Chen",
  founded_date: date('2010-03-15'),
  last_funding: datetime('2023-06-01T10:00:00'),
  funding_amount: 150000000
});

CREATE (innovatech:Company:TechCompany {
  name: "InnovaTech",
  industry: "Software",
  founded: 2015,
  employees: 800,
  headquarters: "Austin",
  departments: ['Engineering', 'Design', 'Sales', 'Support', 'Marketing'],
  stock_price: 156.75,
  revenue_2023: 950000000,
  revenue_2022: 780000000,
  locations: ['Austin', 'San Francisco', 'Remote'],
  technologies: ['Vue.js', 'Node.js', 'MongoDB', 'Docker'],
  rating: 4.5,
  ceo: "Maria Rodriguez",
  founded_date: date('2015-08-20'),
  last_funding: datetime('2023-01-15T14:30:00'),
  funding_amount: 85000000
});

CREATE (dataflow:Company:Analytics {
  name: "DataFlow Analytics",
  industry: "Data Analytics",
  founded: 2018,
  employees: 350,
  headquarters: "New York",
  departments: ['Data Science', 'Engineering', 'Business Intelligence', 'Sales'],
  stock_price: 89.25,
  revenue_2023: 420000000,
  revenue_2022: 350000000,
  locations: ['New York', 'Chicago', 'Remote'],
  technologies: ['Python', 'R', 'Tableau', 'Snowflake'],
  rating: 4.0,
  ceo: "Dr. Michael Kim",
  founded_date: date('2018-11-01'),
  last_funding: datetime('2023-03-20T16:45:00'),
  funding_amount: 45000000
});

// ======================================================================
// ORGANIZATIONAL DEPARTMENTS
// ======================================================================

CREATE (eng_dept:Department {
  name: "Engineering",
  budget: 15000000,
  head: "Sarah Chen",
  established: date('2010-01-01'),
  team_size: 200,
  technologies: ['Python', 'JavaScript', 'Go', 'React', 'Neo4j'],
  projects_active: 12,
  budget_utilization: 0.85,
  performance_rating: 4.3
});

CREATE (design_dept:Department {
  name: "Design",
  budget: 3500000,
  head: "Mike Rodriguez",
  established: date('2015-06-01'),
  team_size: 25,
  technologies: ['Figma', 'Adobe Creative Suite', 'Sketch', 'Principle'],
  projects_active: 8,
  budget_utilization: 0.92,
  performance_rating: 4.6
});

CREATE (data_dept:Department {
  name: "Data Science",
  budget: 8000000,
  head: "Dr. Lisa Wang",
  established: date('2019-01-01'),
  team_size: 45,
  technologies: ['Python', 'R', 'TensorFlow', 'Neo4j', 'Jupyter'],
  projects_active: 6,
  budget_utilization: 0.78,
  performance_rating: 4.4
});

CREATE (product_dept:Department {
  name: "Product",
  budget: 5000000,
  head: "Alex Thompson",
  established: date('2012-03-01'),
  team_size: 35,
  technologies: ['Jira', 'Confluence', 'Figma', 'Analytics'],
  projects_active: 15,
  budget_utilization: 0.88,
  performance_rating: 4.1
});

// ======================================================================
// COMPLEX PROJECTS WITH TIMELINE DATA
// ======================================================================

CREATE (proj1:Project {
  projectId: "PROJ-2024-001",
  name: "Social Analytics Platform",
  status: "In Progress",
  startDate: date('2024-01-15'),
  endDate: date('2024-08-30'),
  budget: 2500000,
  spent: 1625000,
  priority: "High",
  technologies: ['Neo4j', 'Python', 'React', 'Docker', 'AWS'],
  team_size: 8,
  completion_percentage: 65.5,
  risk_level: "Medium",
  client: "Internal",
  project_manager: "Alice Johnson",
  milestones: ['Q1 Planning', 'Q2 Development', 'Q3 Testing', 'Q4 Launch']
});

CREATE (proj2:Project {
  projectId: "PROJ-2024-002", 
  name: "ML Recommendation Engine",
  status: "Planning",
  startDate: date('2024-03-01'),
  endDate: date('2024-12-15'),
  budget: 1800000,
  spent: 270000,
  priority: "High",
  technologies: ['Python', 'TensorFlow', 'Kubernetes', 'PostgreSQL'],
  team_size: 6,
  completion_percentage: 15.0,
  risk_level: "High",
  client: "External",
  project_manager: "Bob Smith",
  milestones: ['Research Phase', 'Model Development', 'Integration', 'Deployment']
});

CREATE (proj3:Project {
  projectId: "PROJ-2024-003",
  name: "UI/UX Redesign",
  status: "Completed",
  startDate: date('2023-09-01'),
  endDate: date('2024-02-28'),
  budget: 850000,
  spent: 820000,
  priority: "Medium",
  technologies: ['Figma', 'React', 'TypeScript', 'CSS'],
  team_size: 4,
  completion_percentage: 100.0,
  risk_level: "Low",
  client: "Internal",
  project_manager: "Carol Davis",
  milestones: ['User Research', 'Design System', 'Prototyping', 'Implementation']
});

CREATE (proj4:Project {
  projectId: "PROJ-2024-004",
  name: "Cloud Migration",
  status: "In Progress",
  startDate: date('2024-02-01'),
  endDate: date('2024-09-30'),
  budget: 3200000,
  spent: 1280000,
  priority: "Critical",
  technologies: ['AWS', 'Docker', 'Kubernetes', 'Terraform'],
  team_size: 12,
  completion_percentage: 40.0,
  risk_level: "Medium",
  client: "Internal",
  project_manager: "David Wilson",
  milestones: ['Assessment', 'Migration Plan', 'Pilot Migration', 'Full Migration']
});

// ======================================================================
// COMPREHENSIVE SKILL NODES
// ======================================================================

CREATE (python:Skill {name: "Python", category: "Programming", demand: "Very High", avg_salary: 120000, learning_curve: "Medium", certification_available: true});
CREATE (javascript:Skill {name: "JavaScript", category: "Programming", demand: "Very High", avg_salary: 110000, learning_curve: "Medium", certification_available: true});
CREATE (react:Skill {name: "React", category: "Frontend", demand: "High", avg_salary: 115000, learning_curve: "Medium", certification_available: true});
CREATE (nodejs:Skill {name: "Node.js", category: "Backend", demand: "High", avg_salary: 118000, learning_curve: "Medium", certification_available: false});
CREATE (docker:Skill {name: "Docker", category: "DevOps", demand: "Very High", avg_salary: 125000, learning_curve: "Low", certification_available: true});
CREATE (kubernetes:Skill {name: "Kubernetes", category: "DevOps", demand: "Very High", avg_salary: 135000, learning_curve: "High", certification_available: true});
CREATE (aws:Skill {name: "AWS", category: "Cloud", demand: "Very High", avg_salary: 130000, learning_curve: "High", certification_available: true});
CREATE (figma:Skill {name: "Figma", category: "Design", demand: "Medium", avg_salary: 85000, learning_curve: "Low", certification_available: false});
CREATE (ml:Skill {name: "Machine Learning", category: "Data Science", demand: "Very High", avg_salary: 140000, learning_curve: "High", certification_available: true});
CREATE (sql:Skill {name: "SQL", category: "Database", demand: "High", avg_salary: 95000, learning_curve: "Low", certification_available: true});
CREATE (java:Skill {name: "Java", category: "Programming", demand: "High", avg_salary: 118000, learning_curve: "Medium", certification_available: true});
CREATE (vuejs:Skill {name: "Vue.js", category: "Frontend", demand: "Medium", avg_salary: 108000, learning_curve: "Medium", certification_available: true});
CREATE (typescript:Skill {name: "TypeScript", category: "Programming", demand: "High", avg_salary: 122000, learning_curve: "Medium", certification_available: false});

// ======================================================================
// PHASE 4: COMPLEX RELATIONSHIPS WITH RICH PROPERTIES
// ======================================================================

// Employment relationships with comprehensive data
MATCH (alice:Person {name: "Alice Johnson"}), (techcorp:Company {name: "TechCorp"})
CREATE (alice)-[:WORKS_FOR {
  since: date('2020-09-01'),
  position: "Senior Software Engineer",
  salary: 125000,
  is_remote: false,
  performance_rating: 4.5,
  bonus_eligible: true,
  stock_options: 5000,
  vacation_days: 25,
  last_promotion: date('2023-01-15'),
  next_review: date('2024-09-01')
}]->(techcorp);

MATCH (bob:Person {name: "Bob Smith"}), (techcorp:Company {name: "TechCorp"})
CREATE (bob)-[:WORKS_FOR {
  since: date('2019-03-15'),
  position: "Senior Data Scientist", 
  salary: 135000,
  is_remote: true,
  performance_rating: 4.2,
  bonus_eligible: true,
  stock_options: 7000,
  vacation_days: 28,
  last_promotion: date('2022-06-01'),
  next_review: date('2024-10-15')
}]->(techcorp);

MATCH (carol:Person {name: "Carol Davis"}), (innovatech:Company {name: "InnovaTech"})
CREATE (carol)-[:WORKS_FOR {
  since: date('2021-06-01'),
  position: "Lead UX Designer",
  salary: 98000,
  is_remote: false,
  performance_rating: 4.5,
  bonus_eligible: true,
  stock_options: 3000,
  vacation_days: 23,
  last_promotion: date('2023-06-01'),
  next_review: date('2024-12-01')
}]->(innovatech);

MATCH (david:Person {name: "David Wilson"}), (techcorp:Company {name: "TechCorp"})
CREATE (david)-[:WORKS_FOR {
  since: date('2018-01-20'),
  position: "Senior DevOps Engineer",
  salary: 140000,
  is_remote: true,
  performance_rating: 4.3,
  bonus_eligible: true,
  stock_options: 8000,
  vacation_days: 30,
  last_promotion: date('2021-12-01'),
  next_review: date('2024-08-20')
}]->(techcorp);

MATCH (eva:Person {name: "Eva Martinez"}), (innovatech:Company {name: "InnovaTech"})
CREATE (eva)-[:WORKS_FOR {
  since: date('2022-08-01'),
  position: "Frontend Developer",
  salary: 110000,
  is_remote: false,
  performance_rating: 4.3,
  bonus_eligible: false,
  stock_options: 1500,
  vacation_days: 20,
  last_promotion: null,
  next_review: date('2024-11-01')
}]->(innovatech);

MATCH (frank:Person {name: "Frank Chen"}), (techcorp:Company {name: "TechCorp"})
CREATE (frank)-[:WORKS_FOR {
  since: date('2020-02-15'),
  position: "Backend Developer",
  salary: 128000,
  is_remote: false,
  performance_rating: 4.1,
  bonus_eligible: true,
  stock_options: 4500,
  vacation_days: 25,
  last_promotion: date('2022-08-15'),
  next_review: date('2024-09-15')
}]->(techcorp);

// Department memberships with detailed role information
MATCH (alice:Person {name: "Alice Johnson"}), (eng:Department {name: "Engineering"})
CREATE (alice)-[:MEMBER_OF {
  since: date('2020-09-01'),
  role: "Tech Lead",
  allocation: 100,
  reports_to: "Sarah Chen",
  team_lead: true,
  committee_member: ["Architecture", "Hiring"]
}]->(eng);

MATCH (bob:Person {name: "Bob Smith"}), (data:Department {name: "Data Science"})
CREATE (bob)-[:MEMBER_OF {
  since: date('2019-03-15'),
  role: "Senior Data Scientist",
  allocation: 100,
  reports_to: "Dr. Lisa Wang",
  team_lead: false,
  committee_member: ["Research", "Ethics"]
}]->(data);

MATCH (carol:Person {name: "Carol Davis"}), (design:Department {name: "Design"})
CREATE (carol)-[:MEMBER_OF {
  since: date('2021-06-01'),
  role: "Lead Designer",
  allocation: 100,
  reports_to: "Mike Rodriguez",
  team_lead: true,
  committee_member: ["UX Standards", "Accessibility"]
}]->(design);

MATCH (david:Person {name: "David Wilson"}), (eng:Department {name: "Engineering"})
CREATE (david)-[:MEMBER_OF {
  since: date('2018-01-20'),
  role: "DevOps Lead",
  allocation: 100,
  reports_to: "Sarah Chen",
  team_lead: true,
  committee_member: ["Infrastructure", "Security"]
}]->(eng);

MATCH (frank:Person {name: "Frank Chen"}), (eng:Department {name: "Engineering"})
CREATE (frank)-[:MEMBER_OF {
  since: date('2020-02-15'),
  role: "Backend Developer",
  allocation: 100,
  reports_to: "Alice Johnson",
  team_lead: false,
  committee_member: ["Code Review"]
}]->(eng);

// Comprehensive skill relationships with experience data
MATCH (alice:Person {name: "Alice Johnson"}), (python:Skill {name: "Python"})
CREATE (alice)-[:HAS_SKILL {
  proficiency: 9,
  years_experience: 5,
  acquired_date: date('2019-01-01'),
  certified: true,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Expert"
}]->(python);

MATCH (alice:Person {name: "Alice Johnson"}), (react:Skill {name: "React"})
CREATE (alice)-[:HAS_SKILL {
  proficiency: 8,
  years_experience: 4,
  acquired_date: date('2020-03-01'),
  certified: true,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Advanced"
}]->(react);

MATCH (alice:Person {name: "Alice Johnson"}), (javascript:Skill {name: "JavaScript"})
CREATE (alice)-[:HAS_SKILL {
  proficiency: 8,
  years_experience: 6,
  acquired_date: date('2018-06-01'),
  certified: false,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Advanced"
}]->(javascript);

MATCH (bob:Person {name: "Bob Smith"}), (python:Skill {name: "Python"})
CREATE (bob)-[:HAS_SKILL {
  proficiency: 9,
  years_experience: 6,
  acquired_date: date('2018-01-01'),
  certified: false,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Expert"
}]->(python);

MATCH (bob:Person {name: "Bob Smith"}), (ml:Skill {name: "Machine Learning"})
CREATE (bob)-[:HAS_SKILL {
  proficiency: 8,
  years_experience: 4,
  acquired_date: date('2020-01-01'),
  certified: true,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Advanced"
}]->(ml);

MATCH (bob:Person {name: "Bob Smith"}), (sql:Skill {name: "SQL"})
CREATE (bob)-[:HAS_SKILL {
  proficiency: 7,
  years_experience: 5,
  acquired_date: date('2019-01-01'),
  certified: false,
  last_used: date('2024-07-14'),
  primary_skill: false,
  skill_level: "Intermediate"
}]->(sql);

MATCH (david:Person {name: "David Wilson"}), (docker:Skill {name: "Docker"})
CREATE (david)-[:HAS_SKILL {
  proficiency: 9,
  years_experience: 5,
  acquired_date: date('2019-01-01'),
  certified: true,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Expert"
}]->(docker);

MATCH (david:Person {name: "David Wilson"}), (kubernetes:Skill {name: "Kubernetes"})
CREATE (david)-[:HAS_SKILL {
  proficiency: 8,
  years_experience: 3,
  acquired_date: date('2021-01-01'),
  certified: true,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Advanced"
}]->(kubernetes);

MATCH (david:Person {name: "David Wilson"}), (aws:Skill {name: "AWS"})
CREATE (david)-[:HAS_SKILL {
  proficiency: 8,
  years_experience: 4,
  acquired_date: date('2020-01-01'),
  certified: true,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Advanced"
}]->(aws);

MATCH (carol:Person {name: "Carol Davis"}), (figma:Skill {name: "Figma"})
CREATE (carol)-[:HAS_SKILL {
  proficiency: 9,
  years_experience: 3,
  acquired_date: date('2021-01-01'),
  certified: true,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Expert"
}]->(figma);

MATCH (eva:Person {name: "Eva Martinez"}), (vuejs:Skill {name: "Vue.js"})
CREATE (eva)-[:HAS_SKILL {
  proficiency: 8,
  years_experience: 2,
  acquired_date: date('2022-01-01'),
  certified: true,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Advanced"
}]->(vuejs);

MATCH (eva:Person {name: "Eva Martinez"}), (typescript:Skill {name: "TypeScript"})
CREATE (eva)-[:HAS_SKILL {
  proficiency: 7,
  years_experience: 2,
  acquired_date: date('2022-06-01'),
  certified: false,
  last_used: date('2024-07-15'),
  primary_skill: false,
  skill_level: "Intermediate"
}]->(typescript);

MATCH (frank:Person {name: "Frank Chen"}), (java:Skill {name: "Java"})
CREATE (frank)-[:HAS_SKILL {
  proficiency: 9,
  years_experience: 7,
  acquired_date: date('2017-01-01'),
  certified: true,
  last_used: date('2024-07-15'),
  primary_skill: true,
  skill_level: "Expert"
}]->(java);

MATCH (frank:Person {name: "Frank Chen"}), (sql:Skill {name: "SQL"})
CREATE (frank)-[:HAS_SKILL {
  proficiency: 8,
  years_experience: 6,
  acquired_date: date('2018-01-01'),
  certified: false,
  last_used: date('2024-07-15'),
  primary_skill: false,
  skill_level: "Advanced"
}]->(sql);

// Project assignments with detailed role and time tracking
MATCH (alice:Person {name: "Alice Johnson"}), (proj1:Project {name: "Social Analytics Platform"})
CREATE (alice)-[:ASSIGNED_TO {
  role: "Tech Lead",
  allocation: 80,
  start_date: date('2024-01-15'),
  hourly_rate: 75.00,
  is_active: true,
  responsibilities: ["Architecture", "Code Review", "Team Coordination"],
  hours_logged: 520,
  estimated_hours: 800
}]->(proj1);

MATCH (bob:Person {name: "Bob Smith"}), (proj1:Project {name: "Social Analytics Platform"})
CREATE (bob)-[:ASSIGNED_TO {
  role: "Data Scientist",
  allocation: 60,
  start_date: date('2024-01-20'),
  hourly_rate: 80.00,
  is_active: true,
  responsibilities: ["Analytics Models", "Data Processing", "Reporting"],
  hours_logged: 390,
  estimated_hours: 600
}]->(proj1);

MATCH (david:Person {name: "David Wilson"}), (proj1:Project {name: "Social Analytics Platform"})
CREATE (david)-[:ASSIGNED_TO {
  role: "DevOps Engineer",
  allocation: 40,
  start_date: date('2024-01-25'),
  hourly_rate: 85.00,
  is_active: true,
  responsibilities: ["Infrastructure", "Deployment", "Monitoring"],
  hours_logged: 260,
  estimated_hours: 400
}]->(proj1);

MATCH (bob:Person {name: "Bob Smith"}), (proj2:Project {name: "ML Recommendation Engine"})
CREATE (bob)-[:ASSIGNED_TO {
  role: "Lead Data Scientist",
  allocation: 40,
  start_date: date('2024-03-01'),
  hourly_rate: 80.00,
  is_active: true,
  responsibilities: ["ML Model Design", "Research", "Implementation"],
  hours_logged: 156,
  estimated_hours: 600
}]->(proj2);

MATCH (carol:Person {name: "Carol Davis"}), (proj3:Project {name: "UI/UX Redesign"})
CREATE (carol)-[:ASSIGNED_TO {
  role: "Lead Designer", 
  allocation: 100,
  start_date: date('2023-09-01'),
  end_date: date('2024-02-28'),
  hourly_rate: 65.00,
  is_active: false,
  responsibilities: ["Design System", "User Research", "Prototyping"],
  hours_logged: 1260,
  estimated_hours: 1300
}]->(proj3);

MATCH (david:Person {name: "David Wilson"}), (proj4:Project {name: "Cloud Migration"})
CREATE (david)-[:ASSIGNED_TO {
  role: "Lead DevOps Engineer",
  allocation: 60,
  start_date: date('2024-02-01'),
  hourly_rate: 85.00,
  is_active: true,
  responsibilities: ["Migration Strategy", "Infrastructure", "Security"],
  hours_logged: 384,
  estimated_hours: 960
}]->(proj4);

MATCH (frank:Person {name: "Frank Chen"}), (proj4:Project {name: "Cloud Migration"})
CREATE (frank)-[:ASSIGNED_TO {
  role: "Backend Developer",
  allocation: 50,
  start_date: date('2024-02-15'),
  hourly_rate: 70.00,
  is_active: true,
  responsibilities: ["Application Migration", "API Updates", "Testing"],
  hours_logged: 300,
  estimated_hours: 800
}]->(proj4);

// Professional and social relationships with interaction history
MATCH (alice:Person {name: "Alice Johnson"}), (bob:Person {name: "Bob Smith"})
CREATE (alice)-[:KNOWS {
  since: date('2020-09-01'),
  relationship_type: "Colleague",
  strength: 8,
  last_interaction: datetime('2024-07-15T14:30:00'),
  interaction_count: 45,
  context: "Work Collaboration",
  mutual_projects: 1
}]->(bob);

MATCH (alice:Person {name: "Alice Johnson"}), (frank:Person {name: "Frank Chen"})
CREATE (alice)-[:MANAGES {
  since: date('2022-01-15'),
  direct_report: true,
  one_on_one_frequency: "Weekly",
  last_one_on_one: date('2024-07-10'),
  performance_score: 4.1,
  development_goals: ["Leadership Skills", "System Design"]
}]->(frank);

MATCH (alice:Person {name: "Alice Johnson"}), (carol:Person {name: "Carol Davis"})
CREATE (alice)-[:KNOWS {
  since: date('2021-08-15'),
  relationship_type: "Professional",
  strength: 6,
  last_interaction: datetime('2024-07-10T16:00:00'),
  interaction_count: 23,
  context: "Cross-team Collaboration",
  mutual_projects: 0
}]->(carol);

MATCH (bob:Person {name: "Bob Smith"}), (david:Person {name: "David Wilson"})
CREATE (bob)-[:KNOWS {
  since: date('2019-05-01'),
  relationship_type: "Close Colleague",
  strength: 9,
  last_interaction: datetime('2024-07-14T11:15:00'),
  interaction_count: 67,
  context: "Long-term Collaboration",
  mutual_projects: 2
}]->(david);

MATCH (david:Person {name: "David Wilson"}), (eva:Person {name: "Eva Martinez"})
CREATE (david)-[:MENTORS {
  since: date('2022-08-15'),
  mentorship_type: "Technical",
  frequency: "Bi-weekly",
  last_session: date('2024-07-05'),
  focus_areas: ["DevOps", "Cloud Architecture", "Career Development"],
  progress_rating: 4.2
}]->(eva);

MATCH (carol:Person {name: "Carol Davis"}), (eva:Person {name: "Eva Martinez"})
CREATE (carol)-[:KNOWS {
  since: date('2022-09-01'),
  relationship_type: "Cross-Company",
  strength: 5,
  last_interaction: datetime('2024-06-20T10:00:00'),
  interaction_count: 12,
  context: "Industry Meetups",
  mutual_projects: 0
}]->(eva);

// Department-Company relationships
MATCH (eng:Department {name: "Engineering"}), (techcorp:Company {name: "TechCorp"})
CREATE (eng)-[:PART_OF {
  since: date('2010-01-01'),
  budget_percentage: 0.35,
  revenue_contribution: 0.70
}]->(techcorp);

MATCH (data:Department {name: "Data Science"}), (techcorp:Company {name: "TechCorp"})
CREATE (data)-[:PART_OF {
  since: date('2019-01-01'),
  budget_percentage: 0.18,
  revenue_contribution: 0.25
}]->(techcorp);

MATCH (design:Department {name: "Design"}), (innovatech:Company {name: "InnovaTech"})
CREATE (design)-[:PART_OF {
  since: date('2015-06-01'),
  budget_percentage: 0.15,
  revenue_contribution: 0.30
}]->(innovatech);

MATCH (product:Department {name: "Product"}), (innovatech:Company {name: "InnovaTech"})
CREATE (product)-[:PART_OF {
  since: date('2016-01-01'),
  budget_percentage: 0.22,
  revenue_contribution: 0.45
}]->(innovatech);

// Project-Department management relationships
MATCH (proj1:Project {name: "Social Analytics Platform"}), (eng:Department {name: "Engineering"})
CREATE (proj1)-[:MANAGED_BY {
  budget_allocation: 0.7,
  primary_department: true,
  oversight_level: "High"
}]->(eng);

MATCH (proj1:Project {name: "Social Analytics Platform"}), (data:Department {name: "Data Science"})
CREATE (proj1)-[:MANAGED_BY {
  budget_allocation: 0.3,
  primary_department: false,
  oversight_level: "Medium"
}]->(data);

MATCH (proj2:Project {name: "ML Recommendation Engine"}), (data:Department {name: "Data Science"})
CREATE (proj2)-[:MANAGED_BY {
  budget_allocation: 1.0,
  primary_department: true,
  oversight_level: "High"
}]->(data);

MATCH (proj3:Project {name: "UI/UX Redesign"}), (design:Department {name: "Design"})
CREATE (proj3)-[:MANAGED_BY {
  budget_allocation: 1.0,
  primary_department: true,
  oversight_level: "High"
}]->(design);

MATCH (proj4:Project {name: "Cloud Migration"}), (eng:Department {name: "Engineering"})
CREATE (proj4)-[:MANAGED_BY {
  budget_allocation: 1.0,
  primary_department: true,
  oversight_level: "Critical"
}]->(eng);

// ======================================================================
// PHASE 5: VERIFICATION AND SUCCESS CONFIRMATION
// ======================================================================

// Final verification queries
MATCH (n) 
RETURN labels(n) AS node_types, 
       count(n) AS count 
ORDER BY count DESC;

// Summary of relationships
MATCH ()-[r]->() 
RETURN type(r) AS relationship_type, 
       count(r) AS count 
ORDER BY count DESC;

// Verify constraints were created
SHOW CONSTRAINTS;

// Verify indexes were created
SHOW INDEXES;

// Final success message
RETURN "✅ Complete Database Reset and Recreation Successful!" AS status,
       "🚀 Ready for all Lab 2 Advanced Cypher exercises" AS ready_for,
       "💾 Created comprehensive dataset with realistic business data" AS description;